{"remainingRequest":"E:\\TheCodeWork_Assignment\\frontend\\node_modules\\babel-loader\\lib\\index.js!E:\\TheCodeWork_Assignment\\frontend\\node_modules\\eslint-loader\\index.js??ref--13-0!E:\\TheCodeWork_Assignment\\frontend\\src\\service\\Auth.js","dependencies":[{"path":"E:\\TheCodeWork_Assignment\\frontend\\src\\service\\Auth.js","mtime":1624785688730},{"path":"E:\\TheCodeWork_Assignment\\frontend\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"E:\\TheCodeWork_Assignment\\frontend\\node_modules\\babel-loader\\lib\\index.js","mtime":315532800000},{"path":"E:\\TheCodeWork_Assignment\\frontend\\node_modules\\eslint-loader\\index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:aW1wb3J0IF9hc3luY1RvR2VuZXJhdG9yIGZyb20gIkU6L1RoZUNvZGVXb3JrX0Fzc2lnbm1lbnQvZnJvbnRlbmQvbm9kZV9tb2R1bGVzL0BiYWJlbC9ydW50aW1lL2hlbHBlcnMvZXNtL2FzeW5jVG9HZW5lcmF0b3IiOwppbXBvcnQgInJlZ2VuZXJhdG9yLXJ1bnRpbWUvcnVudGltZS5qcyI7CmltcG9ydCBheGlvcyBmcm9tICdheGlvcyc7CmltcG9ydCByb3V0ZXIgZnJvbSAnLi4vcm91dGVyJzsKdmFyIHN0YXRlID0gewogIHRva2VuOiBsb2NhbFN0b3JhZ2UuZ2V0SXRlbSgndG9rZW4nKSB8fCAnJywKICB1c2VyOiB7fSwKICBzdGF0dXM6ICcnLAogIGVycm9yOiBudWxsCn07CnZhciBnZXR0ZXJzID0gewogIGlzTG9nZ2VkSW46IGZ1bmN0aW9uIGlzTG9nZ2VkSW4oc3RhdGUpIHsKICAgIHJldHVybiAhIXN0YXRlLnRva2VuOwogIH0sCiAgYXV0aFN0YXRlOiBmdW5jdGlvbiBhdXRoU3RhdGUoc3RhdGUpIHsKICAgIHJldHVybiBzdGF0ZS5zdGF0dXM7CiAgfSwKICB1c2VyOiBmdW5jdGlvbiB1c2VyKHN0YXRlKSB7CiAgICByZXR1cm4gc3RhdGUudXNlcjsKICB9LAogIGVycm9yOiBmdW5jdGlvbiBlcnJvcihzdGF0ZSkgewogICAgcmV0dXJuIHN0YXRlLmVycm9yOwogIH0KfTsKdmFyIGFjdGlvbnMgPSB7CiAgbG9naW46IGZ1bmN0aW9uIGxvZ2luKF9yZWYsIHVzZXIpIHsKICAgIHJldHVybiBfYXN5bmNUb0dlbmVyYXRvciggLyojX19QVVJFX18qL3JlZ2VuZXJhdG9yUnVudGltZS5tYXJrKGZ1bmN0aW9uIF9jYWxsZWUoKSB7CiAgICAgIHZhciBjb21taXQsIHJlcywgdG9rZW4sIF91c2VyOwoKICAgICAgcmV0dXJuIHJlZ2VuZXJhdG9yUnVudGltZS53cmFwKGZ1bmN0aW9uIF9jYWxsZWUkKF9jb250ZXh0KSB7CiAgICAgICAgd2hpbGUgKDEpIHsKICAgICAgICAgIHN3aXRjaCAoX2NvbnRleHQucHJldiA9IF9jb250ZXh0Lm5leHQpIHsKICAgICAgICAgICAgY2FzZSAwOgogICAgICAgICAgICAgIGNvbW1pdCA9IF9yZWYuY29tbWl0OwogICAgICAgICAgICAgIGNvbW1pdCgnbG9naW5fcmVxdWVzdCcpOwogICAgICAgICAgICAgIF9jb250ZXh0LnByZXYgPSAyOwogICAgICAgICAgICAgIF9jb250ZXh0Lm5leHQgPSA1OwogICAgICAgICAgICAgIHJldHVybiBheGlvcy5wb3N0KCdodHRwOi8vbG9jYWxob3N0OjUwMDIvYXBpL3VzZXJzL2xvZ2luJywgdXNlcik7CgogICAgICAgICAgICBjYXNlIDU6CiAgICAgICAgICAgICAgcmVzID0gX2NvbnRleHQuc2VudDsKCiAgICAgICAgICAgICAgaWYgKHJlcy5kYXRhLnN1Y2Nlc3MpIHsKICAgICAgICAgICAgICAgIHRva2VuID0gcmVzLmRhdGEudG9rZW47CiAgICAgICAgICAgICAgICBfdXNlciA9IHJlcy5kYXRhLnVzZXI7IC8vIFN0b3JlIHRoZSB0b2tlbiBpbnRvIHRoZSBsb2NhbHN0b3JhZ2UKCiAgICAgICAgICAgICAgICBsb2NhbFN0b3JhZ2Uuc2V0SXRlbSgndG9rZW4nLCB0b2tlbik7IC8vIFNldCB0aGUgYXhpb3MgZGVmYXVsdHMKCiAgICAgICAgICAgICAgICBheGlvcy5kZWZhdWx0cy5oZWFkZXJzLmNvbW1vblsnQXV0aG9yaXphdGlvbiddID0gdG9rZW47CiAgICAgICAgICAgICAgICBjb21taXQoJ2xvZ2luX3N1Y2Nlc3MnLCB0b2tlbiwgX3VzZXIpOwogICAgICAgICAgICAgIH0KCiAgICAgICAgICAgICAgcmV0dXJuIF9jb250ZXh0LmFicnVwdCgicmV0dXJuIiwgcmVzKTsKCiAgICAgICAgICAgIGNhc2UgMTA6CiAgICAgICAgICAgICAgX2NvbnRleHQucHJldiA9IDEwOwogICAgICAgICAgICAgIF9jb250ZXh0LnQwID0gX2NvbnRleHRbImNhdGNoIl0oMik7CiAgICAgICAgICAgICAgY29tbWl0KCdsb2dpbl9lcnJvcicsIF9jb250ZXh0LnQwKTsKCiAgICAgICAgICAgIGNhc2UgMTM6CiAgICAgICAgICAgIGNhc2UgImVuZCI6CiAgICAgICAgICAgICAgcmV0dXJuIF9jb250ZXh0LnN0b3AoKTsKICAgICAgICAgIH0KICAgICAgICB9CiAgICAgIH0sIF9jYWxsZWUsIG51bGwsIFtbMiwgMTBdXSk7CiAgICB9KSkoKTsKICB9LAogIHNpZ251cDogZnVuY3Rpb24gc2lnbnVwKF9yZWYyLCB1c2VyRGF0YSkgewogICAgcmV0dXJuIF9hc3luY1RvR2VuZXJhdG9yKCAvKiNfX1BVUkVfXyovcmVnZW5lcmF0b3JSdW50aW1lLm1hcmsoZnVuY3Rpb24gX2NhbGxlZTIoKSB7CiAgICAgIHZhciBjb21taXQsIHJlczsKICAgICAgcmV0dXJuIHJlZ2VuZXJhdG9yUnVudGltZS53cmFwKGZ1bmN0aW9uIF9jYWxsZWUyJChfY29udGV4dDIpIHsKICAgICAgICB3aGlsZSAoMSkgewogICAgICAgICAgc3dpdGNoIChfY29udGV4dDIucHJldiA9IF9jb250ZXh0Mi5uZXh0KSB7CiAgICAgICAgICAgIGNhc2UgMDoKICAgICAgICAgICAgICBjb21taXQgPSBfcmVmMi5jb21taXQ7CiAgICAgICAgICAgICAgX2NvbnRleHQyLnByZXYgPSAxOwogICAgICAgICAgICAgIGNvbW1pdCgnc2lnbnVwX3JlcXVlc3QnKTsKICAgICAgICAgICAgICBfY29udGV4dDIubmV4dCA9IDU7CiAgICAgICAgICAgICAgcmV0dXJuIGF4aW9zLnBvc3QoJ2h0dHA6Ly9sb2NhbGhvc3Q6NTAwMi9hcGkvdXNlcnMvcmVnaXN0ZXInLCB1c2VyRGF0YSk7CgogICAgICAgICAgICBjYXNlIDU6CiAgICAgICAgICAgICAgcmVzID0gX2NvbnRleHQyLnNlbnQ7CgogICAgICAgICAgICAgIGlmIChyZXMuZGF0YS5zdWNjZXNzICE9PSB1bmRlZmluZWQpIHsKICAgICAgICAgICAgICAgIGNvbW1pdCgnc2lnbnVwX3N1Y2Nlc3MnKTsKICAgICAgICAgICAgICB9CgogICAgICAgICAgICAgIHJldHVybiBfY29udGV4dDIuYWJydXB0KCJyZXR1cm4iLCByZXMpOwoKICAgICAgICAgICAgY2FzZSAxMDoKICAgICAgICAgICAgICBfY29udGV4dDIucHJldiA9IDEwOwogICAgICAgICAgICAgIF9jb250ZXh0Mi50MCA9IF9jb250ZXh0MlsiY2F0Y2giXSgxKTsKICAgICAgICAgICAgICBjb21taXQoJ3NpZ251cF9lcnJvcicsIF9jb250ZXh0Mi50MCk7CgogICAgICAgICAgICBjYXNlIDEzOgogICAgICAgICAgICBjYXNlICJlbmQiOgogICAgICAgICAgICAgIHJldHVybiBfY29udGV4dDIuc3RvcCgpOwogICAgICAgICAgfQogICAgICAgIH0KICAgICAgfSwgX2NhbGxlZTIsIG51bGwsIFtbMSwgMTBdXSk7CiAgICB9KSkoKTsKICB9LAogIGdldFByb2ZpbGU6IGZ1bmN0aW9uIGdldFByb2ZpbGUoX3JlZjMpIHsKICAgIHJldHVybiBfYXN5bmNUb0dlbmVyYXRvciggLyojX19QVVJFX18qL3JlZ2VuZXJhdG9yUnVudGltZS5tYXJrKGZ1bmN0aW9uIF9jYWxsZWUzKCkgewogICAgICB2YXIgY29tbWl0LCByZXM7CiAgICAgIHJldHVybiByZWdlbmVyYXRvclJ1bnRpbWUud3JhcChmdW5jdGlvbiBfY2FsbGVlMyQoX2NvbnRleHQzKSB7CiAgICAgICAgd2hpbGUgKDEpIHsKICAgICAgICAgIHN3aXRjaCAoX2NvbnRleHQzLnByZXYgPSBfY29udGV4dDMubmV4dCkgewogICAgICAgICAgICBjYXNlIDA6CiAgICAgICAgICAgICAgY29tbWl0ID0gX3JlZjMuY29tbWl0OwogICAgICAgICAgICAgIGNvbW1pdCgncHJvZmlsZV9yZXF1ZXN0Jyk7CiAgICAgICAgICAgICAgX2NvbnRleHQzLm5leHQgPSA0OwogICAgICAgICAgICAgIHJldHVybiBheGlvcy5nZXQoJ2h0dHA6Ly9sb2NhbGhvc3Q6NTAwMi9hcGkvdXNlcnMvcHJvZmlsZScpOwoKICAgICAgICAgICAgY2FzZSA0OgogICAgICAgICAgICAgIHJlcyA9IF9jb250ZXh0My5zZW50OwogICAgICAgICAgICAgIGNvbW1pdCgncHJvZmlsZV9zdWNjZXNzJywgcmVzLmRhdGEudXNlcik7CiAgICAgICAgICAgICAgcmV0dXJuIF9jb250ZXh0My5hYnJ1cHQoInJldHVybiIsIHJlcyk7CgogICAgICAgICAgICBjYXNlIDc6CiAgICAgICAgICAgIGNhc2UgImVuZCI6CiAgICAgICAgICAgICAgcmV0dXJuIF9jb250ZXh0My5zdG9wKCk7CiAgICAgICAgICB9CiAgICAgICAgfQogICAgICB9LCBfY2FsbGVlMyk7CiAgICB9KSkoKTsKICB9LAogIGxvZ291dDogZnVuY3Rpb24gbG9nb3V0KF9yZWY0KSB7CiAgICByZXR1cm4gX2FzeW5jVG9HZW5lcmF0b3IoIC8qI19fUFVSRV9fKi9yZWdlbmVyYXRvclJ1bnRpbWUubWFyayhmdW5jdGlvbiBfY2FsbGVlNCgpIHsKICAgICAgdmFyIGNvbW1pdDsKICAgICAgcmV0dXJuIHJlZ2VuZXJhdG9yUnVudGltZS53cmFwKGZ1bmN0aW9uIF9jYWxsZWU0JChfY29udGV4dDQpIHsKICAgICAgICB3aGlsZSAoMSkgewogICAgICAgICAgc3dpdGNoIChfY29udGV4dDQucHJldiA9IF9jb250ZXh0NC5uZXh0KSB7CiAgICAgICAgICAgIGNhc2UgMDoKICAgICAgICAgICAgICBjb21taXQgPSBfcmVmNC5jb21taXQ7CiAgICAgICAgICAgICAgX2NvbnRleHQ0Lm5leHQgPSAzOwogICAgICAgICAgICAgIHJldHVybiBsb2NhbFN0b3JhZ2UucmVtb3ZlSXRlbSgndG9rZW4nKTsKCiAgICAgICAgICAgIGNhc2UgMzoKICAgICAgICAgICAgICBjb21taXQoJ2xvZ291dCcpOwogICAgICAgICAgICAgIGRlbGV0ZSBheGlvcy5kZWZhdWx0cy5oZWFkZXJzLmNvbW1vblsnQXV0aG9yaXphdGlvbiddOwogICAgICAgICAgICAgIHJvdXRlci5wdXNoKCcvbG9naW4nKTsKICAgICAgICAgICAgICByZXR1cm4gX2NvbnRleHQ0LmFicnVwdCgicmV0dXJuIik7CgogICAgICAgICAgICBjYXNlIDc6CiAgICAgICAgICAgIGNhc2UgImVuZCI6CiAgICAgICAgICAgICAgcmV0dXJuIF9jb250ZXh0NC5zdG9wKCk7CiAgICAgICAgICB9CiAgICAgICAgfQogICAgICB9LCBfY2FsbGVlNCk7CiAgICB9KSkoKTsKICB9Cn07CnZhciBtdXRhdGlvbnMgPSB7CiAgbG9naW5fcmVxdWVzdDogZnVuY3Rpb24gbG9naW5fcmVxdWVzdChzdGF0ZSkgewogICAgc3RhdGUuZXJyb3IgPSBudWxsOwogICAgc3RhdGUuc3RhdHVzID0gJ2xvYWRpbmcnOwogIH0sCiAgbG9naW5fc3VjY2VzczogZnVuY3Rpb24gbG9naW5fc3VjY2VzcyhzdGF0ZSwgdG9rZW4sIHVzZXIpIHsKICAgIHN0YXRlLnRva2VuID0gdG9rZW47CiAgICBzdGF0ZS51c2VyID0gdXNlcjsKICAgIHN0YXRlLnN0YXR1cyA9ICdzdWNjZXNzJzsKICAgIHN0YXRlLmVycm9yID0gbnVsbDsKICB9LAogIGxvZ2luX2Vycm9yOiBmdW5jdGlvbiBsb2dpbl9lcnJvcihzdGF0ZSwgZXJyKSB7CiAgICBzdGF0ZS5lcnJvciA9IGVyci5yZXNwb25zZS5kYXRhLm1zZzsKICB9LAogIHNpZ251cF9yZXF1ZXN0OiBmdW5jdGlvbiBzaWdudXBfcmVxdWVzdChzdGF0ZSkgewogICAgc3RhdGUuZXJyb3IgPSBudWxsOwogICAgc3RhdGUuc3RhdHVzID0gJ2xvYWRpbmcnOwogIH0sCiAgc2lnbnVwX3N1Y2Nlc3M6IGZ1bmN0aW9uIHNpZ251cF9zdWNjZXNzKHN0YXRlKSB7CiAgICBzdGF0ZS5lcnJvciA9IG51bGw7CiAgICBzdGF0ZS5zdGF0dXMgPSAnc3VjY2Vzcyc7CiAgfSwKICBzaWdudXBfZXJyb3I6IGZ1bmN0aW9uIHNpZ251cF9lcnJvcihzdGF0ZSwgZXJyKSB7CiAgICBzdGF0ZS5lcnJvciA9IGVyci5yZXNwb25zZS5kYXRhLm1zZzsKICB9LAogIGxvZ291dDogZnVuY3Rpb24gbG9nb3V0KHN0YXRlKSB7CiAgICBzdGF0ZS5lcnJvciA9IG51bGw7CiAgICBzdGF0ZS5zdGF0dXMgPSAnJzsKICAgIHN0YXRlLnRva2VuID0gJyc7CiAgICBzdGF0ZS51c2VyID0gJyc7CiAgfSwKICBwcm9maWxlX3JlcXVlc3Q6IGZ1bmN0aW9uIHByb2ZpbGVfcmVxdWVzdChzdGF0ZSkgewogICAgc3RhdGUuc3RhdHVzID0gJ2xvYWRpbmcnOwogIH0sCiAgcHJvZmlsZV9zdWNjZXNzOiBmdW5jdGlvbiBwcm9maWxlX3N1Y2Nlc3Moc3RhdGUsIHVzZXIpIHsKICAgIHN0YXRlLnVzZXIgPSB1c2VyOwogIH0KfTsKZXhwb3J0IGRlZmF1bHQgewogIHN0YXRlOiBzdGF0ZSwKICBhY3Rpb25zOiBhY3Rpb25zLAogIG11dGF0aW9uczogbXV0YXRpb25zLAogIGdldHRlcnM6IGdldHRlcnMKfTs="},{"version":3,"sources":["E:/TheCodeWork_Assignment/frontend/src/service/Auth.js"],"names":["axios","router","state","token","localStorage","getItem","user","status","error","getters","isLoggedIn","authState","actions","login","commit","post","res","data","success","setItem","defaults","headers","common","signup","userData","undefined","getProfile","get","logout","removeItem","push","mutations","login_request","login_success","login_error","err","response","msg","signup_request","signup_success","signup_error","profile_request","profile_success"],"mappings":"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","sourcesContent":["import axios from 'axios';\r\nimport router from '../router';\r\n\r\nconst state = {\r\n    token: localStorage.getItem('token') || '',\r\n    user: {},\r\n    status: '',\r\n    error: null\r\n};\r\n\r\nconst getters = {\r\n    isLoggedIn: state => !!state.token,\r\n    authState: state => state.status,\r\n    user: state => state.user,\r\n    error: state => state.error\r\n};\r\n\r\nconst actions = {\r\n    async login({\r\n        commit\r\n    }, user) {\r\n        commit('login_request');\r\n        try {\r\n            let res = await axios.post('http://localhost:5002/api/users/login', user)\r\n            if (res.data.success) {\r\n                const token = res.data.token;\r\n                const user = res.data.user;\r\n                // Store the token into the localstorage\r\n                localStorage.setItem('token', token);\r\n                // Set the axios defaults\r\n                axios.defaults.headers.common['Authorization'] = token;\r\n                commit('login_success', token, user);\r\n            }\r\n            return res;\r\n        } catch (err) {\r\n            commit('login_error', err);\r\n        }\r\n    },\r\n\r\n    async signup({\r\n        commit\r\n    }, userData) {\r\n        try {\r\n            commit('signup_request');\r\n            let res = await axios.post('http://localhost:5002/api/users/register', userData);\r\n            if (res.data.success !== undefined) {\r\n                commit('signup_success');\r\n            }\r\n            return res;\r\n        } catch (err) {\r\n            commit('signup_error', err)\r\n        }\r\n    },\r\n\r\n    async getProfile({\r\n        commit\r\n    }) {\r\n        commit('profile_request');\r\n        let res = await axios.get('http://localhost:5002/api/users/profile')\r\n        commit('profile_success', res.data.user)\r\n        return res;\r\n    },\r\n\r\n    async logout({\r\n        commit\r\n    }) {\r\n        await localStorage.removeItem('token');\r\n        commit('logout');\r\n        delete axios.defaults.headers.common['Authorization'];\r\n        router.push('/login');\r\n        return\r\n    }\r\n};\r\n\r\nconst mutations = {\r\n    login_request(state) {\r\n        state.error = null\r\n        state.status = 'loading'\r\n    },\r\n    login_success(state, token, user) {\r\n        state.token = token\r\n        state.user = user\r\n        state.status = 'success'\r\n        state.error = null\r\n    },\r\n    login_error(state, err) {\r\n        state.error = err.response.data.msg\r\n    },\r\n    signup_request(state) {\r\n        state.error = null\r\n        state.status = 'loading'\r\n    },\r\n    signup_success(state) {\r\n        state.error = null\r\n        state.status = 'success'\r\n    },\r\n    signup_error(state, err) {\r\n        state.error = err.response.data.msg\r\n    },\r\n    logout(state) {\r\n        state.error = null\r\n        state.status = ''\r\n        state.token = ''\r\n        state.user = ''\r\n    },\r\n    profile_request(state) {\r\n        state.status = 'loading'\r\n    },\r\n    profile_success(state, user) {\r\n        state.user = user\r\n    }\r\n};\r\n\r\nexport default {\r\n    state,\r\n    actions,\r\n    mutations,\r\n    getters\r\n};"]}]}